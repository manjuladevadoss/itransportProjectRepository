// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See http://js.arcgis.com/3.28/esri/copyright.txt for details.
//>>built
define("esri/dijit/geoenrichment/ReportPlayer/core/sections/dynamicSettings/SectionDynamicSettings","dojo/_base/declare dojo/dom-construct dijit/_WidgetBase dijit/_TemplatedMixin ./chart/ChartSettings ./locator/LocatorSettings ./comparison/ComparisonSettings ./map/MapSettings".split(" "),function(c,b,d,e,f,g,h,k){return c([d,e],{templateString:"\x3cdiv class\x3d'esriGEReportPlayer_sectionDynamicSettings'\x3e\x3c/div\x3e",chartSettings:null,comparisonSettings:null,locatorSettings:null,mapSettings:null,
_chartSettingsWidget:null,_comparisonSettingsWidget:null,_locatorSettingsWidget:null,_mapSettingsWidget:null,postCreate:function(){this._tryInitChartSettings();this._tryInitComparisonSettings();this._tryInitLocatorSettings();this._tryInitMapSettings()},_tryInitChartSettings:function(){this.chartSettings&&(this._chartSettingsWidget=(new f({onSortChart:this.onSortChart.bind(this),onChartToTable:this.onChartToTable.bind(this),onTableToChart:this.onTableToChart.bind(this),onCalcStateChanged:this.onCalcStateChanged.bind(this)})).placeAt(b.create("div",
{"class":"sectionDynamicSettings_row"},this.domNode)),this.own(this._chartSettingsWidget),this._chartSettingsWidget.setSortingOptions(this.chartSettings.sortingOptions,this.chartSettings.sorting),this._chartSettingsWidget.setViewOptions(this.chartSettings.canViewTable),this._chartSettingsWidget.setToggleCalcStateOptions(this.chartSettings.group))},_tryInitLocatorSettings:function(){this.locatorSettings&&(this._locatorSettingsWidget=(new g({onLocatorSummaryChanged:this.onLocatorSummaryChanged.bind(this)})).placeAt(b.create("div",
{"class":"sectionDynamicSettings_row"},this.domNode)),this.own(this._locatorSettingsWidget),this._locatorSettingsWidget.setSummaryInfos(this.locatorSettings.summaryInfos))},_tryInitComparisonSettings:function(){this.comparisonSettings&&(this._comparisonSettingsWidget=(new h({onShowChart:this.onShowChart.bind(this)})).placeAt(b.create("div",{"class":"sectionDynamicSettings_row"},this.domNode)),this.own(this._comparisonSettingsWidget),this._comparisonSettingsWidget.setSettings(this.comparisonSettings))},
_tryInitMapSettings:function(){this.mapSettings&&(this._mapSettingsWidget=(new k({onLegendVisibilityChanged:this.onLegendVisibilityChanged.bind(this)})).placeAt(b.create("div",{"class":"sectionDynamicSettings_row"},this.domNode)),this.own(this._mapSettingsWidget),this._mapSettingsWidget.setLegendVisible(this.mapSettings.showLegend))},setVisualState:function(a){this._chartSettingsWidget&&this._chartSettingsWidget.setVisualState(a);this._locatorSettingsWidget&&this._locatorSettingsWidget.setVisualState(a);
this._comparisonSettingsWidget&&this._comparisonSettingsWidget.setVisualState(a);this._mapSettingsWidget&&this._mapSettingsWidget.setVisualState(a)},onSortChart:function(a){},onChartToTable:function(){},onTableToChart:function(){},onCalcStateChanged:function(a){},onLocatorSummaryChanged:function(a){},onShowChart:function(a){},onLegendVisibilityChanged:function(a){},onClosePopup:function(){}})});